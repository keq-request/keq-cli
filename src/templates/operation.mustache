import { Keq } from 'keq'
import { request } from '{{{request}}}'
{{#dependencies}}
import { {{>t_model}} } from './components/schema/{{refFilename}}'
{{/dependencies}}


{{#responses}}
{{#response.description}}
/**
 * {{{.}}}
 */
{{/response.description}}
{{#content}}
{{>t_schema}}
{{/content}}
{{/responses}}

{{#defineEnv}}
const env: Record<string, string> = {{{env}}}
{{/defineEnv}}

/**
{{#descriptions}}
 * {{{.}}}
{{/descriptions}}
{{#summary}}
 * @summary {{&summary}}
{{/summary}}
{{#parameters}}
 * @param {{=<% %>=}}{<%model.jsDocDataType%>}<%={{ }}=%> {{^required}}[{{/required}}{{{name}}}{{^required}}]{{/required}}{{#schema.description}} {{{.}}}{{/schema.description}}
{{/parameters}}
 * @throws {RequiredError}
 */
export function {{nickname}}(arg{{^parameters.length}}?{{/parameters.length}}: {
{{#parameters}}
  {{{name}}}{{^required}}?{{/required}}: {{#model}}{{>t_model}}{{/model}}
{{/parameters}}
}): Keq<{{#responses}}Response_{{code}}{{^last}} | {{/last}}{{/responses}}> {
{{!必填参数校验}}
{{#parameters}}
{{#required}}
  // verify required parameter `{{name}}` is not null or undefined
  if (arg['{{name}}'] === null || arg['{{name}}'] === undefined) {
    throw new Error('Required parameter {{name}} was null or undefined when calling {{nickname}}.')
  }
{{/required}}
{{/parameters}}

{{#defineEnv}}
  const url = process.env.{{{envName}}} && env[process.env.{{{envName}}}] || ''
{{/defineEnv}}

  const req = request.{{method}}<{{#responses}}Response_{{code}}{{^last}} | {{/last}}{{/responses}}>(`{{#defineEnv}}${url}{{/defineEnv}}{{{pathname}}}`)
    .option('module', {
      name: '{{{moduleName}}}',
      pathname: '{{{pathname}}}',
      {{#defineEnv}}
      env,
      {{/defineEnv}}
    })

{{#parameters}}
{{#isHeader}}
  {{^required}}if ('{{name}}' in arg) {{/required}}void req.header({{name}}, arg['{{name}}'])
{{/isHeader}}
{{/parameters}}

{{#parameters}}
{{#isQuery}}
  {{^required}}if ('{{name}}' in arg) {{/required}}void req.query('{{name}}', String(arg['{{name}}']))
{{/isQuery}}
{{/parameters}}

{{#parameters}}
{{#isParam}}
  {{^required}}if ('{{name}}' in arg) {{/required}}void req.params('{{name}}', String(arg['{{name}}']))
{{/isParam}}
{{/parameters}}

{{#parameters}}
{{#isBody}}
  {{^required}}if ('{{name}}' in arg) {{/required}}void req.send({ '{{name}}': arg['{{name}}'] })
{{/isBody}}
{{/parameters}}

  return req
}
