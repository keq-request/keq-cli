import type { KeqOperation } from 'keq'
{{#each
  (r__uniq
    (r__flatten
      (r__map
        (h__json-path "$..*['$ref']")
        (r__Array
          (h__json-path "$.responses[*].content[*].schema" operation)
          (h__json-path "$.requestBody.content[*].schema" operation)
          (h__json-path "$.parameters[*].schema" operation)
        )
      )
    )
  )
}}
import type { {{h__ref-name this}} } from "../components/schemas/{{h__change-case @root.fileNamingStyle (h__ref-name this)}}{{#if @root.esm}}.js{{/if}}"
{{/each}}


export interface ResponseMap {
  {{#each operation.responses as |responseBody code|}}
  "{{code}}": {{#each responseBody.content as |content contentType|~}}
      {{> t_json_schema_shape content.schema}}{{#unless @last}} | {{/unless}}
    {{else~}}
      unknown
    {{/each}}
  {{/each}}
}

{{#*inline "parameterProperty"}}
  "{{name}}"{{#unless required}}?{{/unless}}: {{> t_json_schema_shape schema}}
{{/inline}}

export type QueryParameters = {
  {{#if operation.parameters}}
  {{#each (r__filter (r__propEq "in" "query") operation.parameters)}}
  {{> parameterProperty}}
  {{/each}}
  {{/if}}
}

export type RouteParameters = {
  {{#if operation.parameters}}
  {{#each (r__filter (r__propEq "in" "path") operation.parameters)}}
  {{> parameterProperty}}
  {{/each}}
  {{/if}}
}

export type HeaderParameters = {
  {{#if operation.parameters}}
  {{#each (r__filter (r__propEq "in" "header") operation.parameters)}}
  {{> parameterProperty}}
  {{/each}}
  {{/if}}
}

export type BodyParameters = {{~#unless (r__isNil operation.requestBody.content)~}}
(
{{~#each (r__map (r__prop "schema") (r__values operation.requestBody.content))}}
{{> t_json_schema_shape this}}{{#unless @last}} | {{/unless}}
{{~/each~}}
)
{{else}}
{}
{{~/unless}}

export type RequestParameters = QueryParameters & RouteParameters & HeaderParameters & BodyParameters


export interface Operation<STATUS extends keyof ResponseMap> extends KeqOperation {
  requestParams: RouteParameters
  requestQuery: QueryParameters
  requestHeaders: HeaderParameters
  requestBody: BodyParameters
  responseBody: ResponseMap[STATUS]
}
